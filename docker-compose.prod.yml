# Docker Compose - Producción Grupo Naser CMS
# Configuración optimizada para despliegue en producción

version: '3.8'

services:
  # Base de datos MySQL para producción
  database:
    image: mysql:8.0
    container_name: naser_db_prod
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_DATABASE: naser_cms
      MYSQL_USER: naser_user
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./database/migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - naser_network_prod
    secrets:
      - mysql_root_password
      - mysql_password
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --sql-mode=STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO
      --innodb-buffer-pool-size=256M

  # Backend PHP API para producción
  backend:
    build:
      context: ./api
      dockerfile: Dockerfile
      target: production
    container_name: naser_backend_prod
    restart: always
    volumes:
      - ./api:/var/www/html:ro
      - backend_logs:/var/log/apache2
    environment:
      DB_HOST: database
      DB_PORT: 3306
      DB_NAME: naser_cms
      DB_USER: naser_user
      APP_ENV: production
      APP_DEBUG: false
    env_file:
      - .env.prod
    depends_on:
      - database
    networks:
      - naser_network_prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/v1/health"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend React para producción
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
      target: production
    container_name: naser_frontend_prod
    restart: always
    networks:
      - naser_network_prod
    environment:
      VITE_API_URL: /api/v1
      VITE_APP_TITLE: Grupo Naser
      VITE_APP_ENV: production

  # Servidor web principal con SSL
  webserver:
    image: nginx:alpine
    container_name: naser_webserver_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/usr/share/nginx/html:ro
      - ./docker/nginx/prod.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx_logs:/var/log/nginx
      - ssl_certs:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - naser_network_prod
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis para caché (opcional)
  redis:
    image: redis:7-alpine
    container_name: naser_redis_prod
    restart: always
    command: redis-server --requirepass redis_password_2024
    volumes:
      - redis_data:/data
    networks:
      - naser_network_prod

secrets:
  mysql_root_password:
    file: ./secrets/mysql_root_password.txt
  mysql_password:
    file: ./secrets/mysql_password.txt

volumes:
  mysql_data_prod:
    driver: local
  backend_logs:
    driver: local
  nginx_logs:
    driver: local
  ssl_certs:
    driver: local
  redis_data:
    driver: local

networks:
  naser_network_prod:
    driver: bridge