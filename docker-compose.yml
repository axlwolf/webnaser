# Docker Compose - Desarrollo Grupo Naser CMS
# Configuración para desarrollo local con hot reload

version: '3.8'

services:
  # Base de datos MySQL
  database:
    image: mysql:8.0
    container_name: naser_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: naser_root_2024
      MYSQL_DATABASE: naser_cms
      MYSQL_USER: naser_user
      MYSQL_PASSWORD: naser_pass_2024
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/migrations:/docker-entrypoint-initdb.d
    networks:
      - naser_network
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --sql-mode=STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO

  # phpMyAdmin para desarrollo
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: naser_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      PMA_USER: naser_user
      PMA_PASSWORD: naser_pass_2024
      MYSQL_ROOT_PASSWORD: naser_root_2024
    ports:
      - "8080:80"
    depends_on:
      - database
    networks:
      - naser_network

  # Backend PHP API
  backend:
    build:
      context: ./api
      dockerfile: Dockerfile
      target: development
    container_name: naser_backend
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./api:/var/www/html
      - ./api/docker/php.ini:/usr/local/etc/php/conf.d/99-app.ini
    environment:
      DB_HOST: database
      DB_PORT: 3306
      DB_NAME: naser_cms
      DB_USER: naser_user
      DB_PASSWORD: naser_pass_2024
      APP_ENV: development
      APP_DEBUG: true
      JWT_SECRET: naser_jwt_secret_development_2024
      CORS_ORIGIN: http://localhost:3000
    depends_on:
      - database
    networks:
      - naser_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
      target: dev-watch
    container_name: naser_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./src:/app/src
      - ./src/frontend/node_modules:/app/node_modules
    environment:
      VITE_API_URL: http://localhost:8000/api/v1
      VITE_APP_TITLE: Grupo Naser CMS
      VITE_APP_ENV: development
      CHOKIDAR_USEPOLLING: true
    depends_on:
      - backend
    networks:
      - naser_network
    stdin_open: true
    tty: true

  # Servidor web para archivos estáticos (simula GoDaddy)
  webserver:
    image: nginx:alpine
    container_name: naser_webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./:/usr/share/nginx/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - naser_network

volumes:
  mysql_data:
    driver: local

networks:
  naser_network:
    driver: bridge