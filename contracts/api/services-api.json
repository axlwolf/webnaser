{
  "openapi": "3.0.3",
  "info": {
    "title": "Grupo Naser CMS API - Services",
    "version": "1.0.0",
    "description": "API contract for funeral services management"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api/v1",
      "description": "Development server"
    },
    {
      "url": "https://gruponaser.com/api/v1",
      "description": "Production server"
    }
  ],
  "paths": {
    "/services": {
      "get": {
        "summary": "Get all funeral services",
        "operationId": "getServices",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "default": 1, "minimum": 1 }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "default": 10, "minimum": 1, "maximum": 100 }
          },
          {
            "name": "search",
            "in": "query",
            "schema": { "type": "string", "example": "previsión" }
          },
          {
            "name": "category",
            "in": "query",
            "schema": { 
              "type": "string", 
              "enum": ["funeral", "cremacion", "prevencion", "emergencia"],
              "example": "funeral"
            }
          },
          {
            "name": "featured",
            "in": "query",
            "schema": { "type": "boolean", "example": true }
          }
        ],
        "responses": {
          "200": {
            "description": "List of services",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Service" }
                    },
                    "pagination": { "$ref": "#/components/schemas/Pagination" },
                    "meta": { "$ref": "#/components/schemas/Meta" }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" }
        }
      },
      "post": {
        "summary": "Create new service",
        "operationId": "createService",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ServiceInput" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Service created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": { "$ref": "#/components/schemas/Service" },
                    "meta": { "$ref": "#/components/schemas/Meta" }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "422": { "$ref": "#/components/responses/ValidationError" }
        }
      }
    },
    "/services/{slug}": {
      "get": {
        "summary": "Get service by slug",
        "operationId": "getServiceBySlug",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "servicio-funeral-basico" }
          }
        ],
        "responses": {
          "200": {
            "description": "Service details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": { "$ref": "#/components/schemas/Service" },
                    "meta": { "$ref": "#/components/schemas/Meta" }
                  }
                }
              }
            }
          },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      },
      "put": {
        "summary": "Update service",
        "operationId": "updateService",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ServiceInput" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Service updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": { "$ref": "#/components/schemas/Service" },
                    "meta": { "$ref": "#/components/schemas/Meta" }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "422": { "$ref": "#/components/responses/ValidationError" }
        }
      },
      "delete": {
        "summary": "Delete service",
        "operationId": "deleteService",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Service deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Service deleted successfully" },
                    "meta": { "$ref": "#/components/schemas/Meta" }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Service": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 1 },
          "name": { "type": "string", "example": "Servicio Funeral Básico" },
          "slug": { "type": "string", "example": "servicio-funeral-basico" },
          "description": { "type": "string", "example": "Descripción completa del servicio funeral básico..." },
          "short_description": { "type": "string", "example": "Servicio completo con atención personalizada" },
          "price": { "type": "number", "format": "float", "example": 15000.00 },
          "image": { "type": "string", "example": "/uploads/services/servicio-01.jpg" },
          "icon": { "type": "string", "example": "/uploads/services/icons/servicio-01.png" },
          "features": {
            "type": "array",
            "items": { "type": "string" },
            "example": ["Ataúd de calidad", "Sala de velación", "Trámites legales", "Carroza fúnebre"]
          },
          "category": { 
            "type": "string", 
            "enum": ["funeral", "cremacion", "prevencion", "emergencia"],
            "example": "funeral"
          },
          "is_featured": { "type": "boolean", "example": true },
          "location_ids": {
            "type": "array",
            "items": { "type": "integer" },
            "example": [1, 2, 3]
          },
          "created_at": { "type": "string", "format": "date-time", "example": "2025-07-18T10:00:00Z" },
          "updated_at": { "type": "string", "format": "date-time", "example": "2025-07-18T10:00:00Z" }
        },
        "required": ["id", "name", "slug", "description", "category"]
      },
      "ServiceInput": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "minLength": 1, "maxLength": 255 },
          "slug": { "type": "string", "pattern": "^[a-z0-9-]+$", "maxLength": 255 },
          "description": { "type": "string", "minLength": 1 },
          "short_description": { "type": "string", "maxLength": 255 },
          "price": { "type": "number", "format": "float", "minimum": 0 },
          "image": { "type": "string", "format": "uri" },
          "icon": { "type": "string", "format": "uri" },
          "features": {
            "type": "array",
            "items": { "type": "string" },
            "maxItems": 10
          },
          "category": { 
            "type": "string", 
            "enum": ["funeral", "cremacion", "prevencion", "emergencia"]
          },
          "is_featured": { "type": "boolean", "default": false },
          "location_ids": {
            "type": "array",
            "items": { "type": "integer" }
          }
        },
        "required": ["name", "slug", "description", "category"]
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "current_page": { "type": "integer", "example": 1 },
          "per_page": { "type": "integer", "example": 10 },
          "total": { "type": "integer", "example": 25 },
          "total_pages": { "type": "integer", "example": 3 },
          "has_next": { "type": "boolean", "example": true },
          "has_previous": { "type": "boolean", "example": false }
        }
      },
      "Meta": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time", "example": "2025-07-18T14:30:00Z" },
          "version": { "type": "string", "example": "1.0.0" },
          "request_id": { "type": "string", "example": "req_123456789" }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "bad_request" },
                "message": { "type": "string", "example": "Invalid request parameters" },
                "code": { "type": "integer", "example": 400 }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized access",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "unauthorized" },
                "message": { "type": "string", "example": "Token invalid or expired" },
                "code": { "type": "integer", "example": 401 }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "not_found" },
                "message": { "type": "string", "example": "Service not found" },
                "code": { "type": "integer", "example": 404 }
              }
            }
          }
        }
      },
      "ValidationError": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": { "type": "string", "example": "validation_error" },
                "message": { "type": "string", "example": "The given data was invalid" },
                "violations": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "array",
                      "items": { "type": "string" },
                      "example": ["The name field is required"]
                    },
                    "category": {
                      "type": "array",
                      "items": { "type": "string" },
                      "example": ["The category field is required"]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}